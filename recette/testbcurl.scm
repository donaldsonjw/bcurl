(module testbcurl
   (library bcurl)
   (main main))




(define (main args)
   (let ((output (open-output-file "header.out"))
         (easy (make-easy "https://www.amazon.com")))
      ;(easy-method-set! easy 'get)
      ;(easy-cookie-jar-set! easy "cookies.txt")
      ;(easy-request-headers-set! easy '(("x-custom-header" . "34")))
      ;(easy-follow-location-set! easy #t)
      (easy-onreceive-header-set! easy (lambda (name value)
                                          (fprintf output "name: ~a value: ~a" name value)))
      (easy-output-port-set! easy (open-output-file "dog2.txt"))
      ;(easy-cainfo-set! easy "~/dummy-path/cafile")
      (easy-perform! easy)
      (print "effective url: " (easy-effective-url easy))
      (print "response code: " (easy-response-code easy))
      (print "total time: " (easy-total-time easy))
      (print "ssl engines: " (easy-ssl-engines easy))
      (print "status is " (easy-status easy))
      (print "easy" easy)
      (close-output-port output)
      (easy-shutdown! easy)))

#;(define (main args)
   (curl-init)
    (let ((handle (make-curl))
    ;     (input (open-input-string "var a = \"test\";"))
                (output (open-output-file "test2.txt"))
                )
       (curl-option-set! handle 'noprogress #f)
       (curl-option-set! handle 'writedata output)
       ;(curl-option-set! handle 'xferinfofunction $bigloo-write-callback)
       (curl-option-set! handle 'xferinfodata (lambda (dlt dln ult uln)
                                                 (printf "dlt: ~a dln: ~a ult: ~a uln: ~a~%"
                                                    dlt dln ult uln)
                                                 0))
   ;    (curl-option-set! handle 'header #t)
   ;    (curl-option-set! handle 'readdata input)
   ;    (curl-option-set! handle 'httpheader '(("Content-Type" . "application/json")
   ;                                           ("header2" . "value3")))
   ;    ;(curl-option-set! handle 'post #t)
   ;    ;(curl-option-set! handle 'copypostfields "a_test_string")
       (curl-option-set! handle 'url "https://slashdot.org")
       (curl-perform! handle)
   ;    (close-output-port output)
   ;    (close-input-port input)
       (curl-cleanup! handle))
   )